{"ast":null,"code":"import _classCallCheck from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rozenmoon/Desktop/drawing_react_app/src/Layout/layout.js\";\nimport React, { Component } from 'react';\nimport Aux from '../hoc/Aux';\nimport Toolbar from '../UI/ToolBar/Toolbar';\nimport Canvas from '../UI/Canvas/Canvas';\nimport SideDrawer from '../UI/SideDrawer/SideDrawer';\nimport Backdrop from '../UI/Backdrop/Backdrop';\nimport './layout.css';\n\nvar Layout =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Layout, _Component);\n\n  function Layout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Layout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Layout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sideDrawerOpen: false,\n      currentTask: \"\",\n      volume: 0\n    };\n\n    _this.SideDrawerToggle = function (props) {\n      _this.setState({\n        sideDrawerOpen: !_this.state.sideDrawerOpen\n      });\n    };\n\n    _this.SideDrawerOpen = function (props) {\n      _this.setState({\n        sideDrawerOpen: true\n      });\n    };\n\n    _this.SideDrawerClose = function (props) {\n      _this.setState({\n        sideDrawerOpen: false\n      });\n    };\n\n    _this.ToolBarClickListner = function (task) {\n      _this.setState({\n        currentTask: task\n      });\n    };\n\n    _this.setSize = function (size) {\n      _this.setState({\n        volume: size\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Layout, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(SideDrawer, {\n        open: this.state.sideDrawerOpen,\n        Task: this.state.currentTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Backdrop, {\n        show: this.state.sideDrawerOpen,\n        clicked: this.SideDrawerClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Toolbar, {\n        sideDrawerToggle: this.SideDrawerToggle,\n        toolOption: this.ToolBarClickListner,\n        Task: this.state.currentTask,\n        ToolClicked: this.SideDrawerOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Canvas, {\n        Task: this.state.currentTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Layout;\n}(Component);\n\nexport default Layout;","map":{"version":3,"sources":["/Users/rozenmoon/Desktop/drawing_react_app/src/Layout/layout.js"],"names":["React","Component","Aux","Toolbar","Canvas","SideDrawer","Backdrop","Layout","state","sideDrawerOpen","currentTask","volume","SideDrawerToggle","props","setState","SideDrawerOpen","SideDrawerClose","ToolBarClickListner","task","setSize","size"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAO,cAAP;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,cAAc,EAAE,KADd;AAEFC,MAAAA,WAAW,EAAC,EAFV;AAGFC,MAAAA,MAAM,EAAE;AAHN,K;;UAMNC,gB,GAAkB,UAACC,KAAD,EAAW;AACzB,YAAKC,QAAL,CAAc;AAACL,QAAAA,cAAc,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAA7B,OAAd;AACH,K;;UAEDM,c,GAAiB,UAACF,KAAD,EAAW;AACxB,YAAKC,QAAL,CAAc;AAACL,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACH,K;;UAEDO,e,GAAkB,UAACH,KAAD,EAAW;AACzB,YAAKC,QAAL,CAAc;AAACL,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACH,K;;UAEDQ,mB,GAAsB,UAACC,IAAD,EAAU;AAC5B,YAAKJ,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAEQ;AAAd,OAAd;AACH,K;;UAEDC,O,GAAU,UAACC,IAAD,EAAU;AAChB,YAAKN,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAGS;AAAV,OAAd;AACH,K;;;;;;;6BAEO;AACJ,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAI,KAAKZ,KAAL,CAAWC,cAA/B;AAA+C,QAAA,IAAI,EAAI,KAAKD,KAAL,CAAWE,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAG,KAAKF,KAAL,CAAWC,cAA5B;AAA4C,QAAA,OAAO,EAAI,KAAKO,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,OAAD;AACI,QAAA,gBAAgB,EAAE,KAAKJ,gBAD3B;AAEI,QAAA,UAAU,EAAE,KAAKK,mBAFrB;AAGI,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWE,WAHrB;AAII,QAAA,WAAW,EAAI,KAAKK,cAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAQI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWE,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADJ;AAYH;;;;EAxCgBT,S;;AA0CrB,eAAeM,MAAf","sourcesContent":["import React, {Component} from 'react'\nimport Aux from '../hoc/Aux'\nimport Toolbar from '../UI/ToolBar/Toolbar'\nimport Canvas from '../UI/Canvas/Canvas'\nimport SideDrawer from '../UI/SideDrawer/SideDrawer'\nimport Backdrop from '../UI/Backdrop/Backdrop'\nimport './layout.css'\n\nclass Layout extends Component {\n    state={\n        sideDrawerOpen: false,\n        currentTask:\"\",\n        volume: 0,\n    }\n\n    SideDrawerToggle =(props) => {\n        this.setState({sideDrawerOpen: !this.state.sideDrawerOpen});\n    }\n\n    SideDrawerOpen = (props) => {\n        this.setState({sideDrawerOpen: true});\n    }\n\n    SideDrawerClose = (props) => {\n        this.setState({sideDrawerOpen: false});\n    }\n\n    ToolBarClickListner = (task) => {\n        this.setState({currentTask: task});\n    }\n\n    setSize = (size) => {\n        this.setState({volume : size});\n    }\n\n    render(){\n        return(\n            <Aux>\n                <SideDrawer open = {this.state.sideDrawerOpen} Task = {this.state.currentTask}/>\n                <Backdrop show ={this.state.sideDrawerOpen} clicked = {this.SideDrawerClose}/>\n                <Toolbar \n                    sideDrawerToggle={this.SideDrawerToggle} \n                    toolOption={this.ToolBarClickListner} \n                    Task={this.state.currentTask}\n                    ToolClicked = {this.SideDrawerOpen}/>\n                <Canvas Task={this.state.currentTask}/>\n             </Aux>\n        );\n    }\n}\nexport default Layout;"]},"metadata":{},"sourceType":"module"}