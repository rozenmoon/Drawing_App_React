{"ast":null,"code":"import _classCallCheck from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rozenmoon/Desktop/drawing_react_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rozenmoon/Desktop/drawing_react_app/src/UI/Canvas/Canvas.js\";\nimport React, { Component } from 'react';\nimport classes from './Canvas.css'; // import { NONAME } from 'dns';\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas(props) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Canvas).call(this, props));\n    _this.state = {\n      mousedown: false,\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0,\n      one_state_back: null,\n      current_state: null\n    };\n\n    _this.MouseDown = function (e) {\n      e.persist();\n\n      var statei = _this.ctx.getImageData(0, 0, _this.canvas.width, _this.canvas.height);\n\n      _this.setState(function () {\n        return {\n          mousedown: true,\n          startX: e.nativeEvent.clientX,\n          startY: e.nativeEvent.clientY,\n          one_state_back: statei\n        };\n      });\n\n      _this.activationFunction(e);\n    };\n\n    _this.MouseMove = function (e) {\n      console.log(_this.props.Task);\n      e.persist();\n\n      if (_this.state.mousedown) {\n        if (_this.props.Task == \"Line\" || _this.props.Task == \"Circle\") {\n          _this.clearCanvas();\n        }\n\n        _this.activationFunction(e);\n      }\n    };\n\n    _this.MouseUp = function (e) {\n      e.persist();\n\n      _this.setState(function () {\n        return {\n          mousedown: false,\n          endX: e.nativeEvent.clientX,\n          endY: e.nativeEvent.clientY\n        };\n      });\n\n      _this.activationFunction(e);\n    };\n\n    _this.activationFunction = function (e) {\n      if (_this.props.Task === \"Line\") {\n        return _this.drawLine(e);\n      } else if (_this.props.Task === \"Pencil\") {\n        return console.log(\"Pencil\");\n      } else if (_this.props.Task === \"Shape\") {\n        return console.log(\"Shape\");\n      } else if (_this.props.Task === \"Erase\") {\n        return console.log(\"Erase\");\n      }\n    };\n\n    _this.clearCanvas = function () {\n      _this.setState({\n        current_state: _this.state.one_state_back\n      });\n\n      _this.ctx.clearRect(0, 0, 500, 500);\n\n      _this.ctx.putImageData(_this.state.current_state, 0, 0);\n    };\n\n    _this.drawLine = function (e) {\n      e.persist();\n\n      _this.setState({\n        endX: e.nativeEvent.clientX,\n        endY: e.nativeEvent.clientY\n      });\n\n      console.log(_this.state.startX, _this.state.startY);\n      console.log(_this.state.endX, _this.state.endY);\n\n      _this.ctx.beginPath();\n\n      _this.ctx.moveTo(_this.state.startX, _this.state.startY);\n\n      _this.ctx.lineTo(_this.state.endX, _this.state.endY);\n\n      _this.ctx.stroke();\n\n      _this.setState({\n        current_state: _this.ctx.getImageData(0, 0, _this.canvas.width, _this.canvas.height)\n      });\n    };\n\n    _this.canvas = React.createRef();\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.canvas = this.refs.canvas;\n      this.ctx = this.canvas.getContext(\"2d\");\n      console.log(this.canvas.width, this.canvas.height);\n      var statei = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n      this.setState({\n        one_state_back: statei,\n        current_state: statei\n      }); // this.ctx.beginPath();\n      // this.ctx.moveTo();\n      // this.ctx.lineTo(\"100px,100px\");\n      // this.ctx.stroke();\n    }\n  }, {\n    key: \"render\",\n    // function drawCircle(event,start_point,end_point)\n    // {\n    //     end_point.X = event.clientX;\n    //     end_point.Y = event.clientY;\n    //     ctx.beginPath();\n    //     ctx.arc(start_point.X,start_point.Y,Distance(start_point,end_point),0,2*Math.PI);\n    //     ctx.stroke();\n    //     current_state = ctx.getImageData(0,0,c.width,c.height);\n    // }\n    // function Eraser(event)\n    // {\t\n    //     ctx.clearRect(event.clientX,event.clientY,4,4);\n    // }\n    // function handLine(event,start_point,end_point)\n    // {\n    //     start_point.X = end_point.X;\n    //     start_point.Y = end_point.Y;\n    //     end_point.X = event.clientX;\n    //     end_point.Y = event.clientY;\n    //     ctx.beginPath();\n    //     ctx.moveTo(start_point.X,start_point.Y);\n    //     ctx.lineTo(end_point.X,end_point.Y);\n    //     ctx.stroke();\n    //     current_state = ctx.getImageData(0,0,c.width,c.height);\n    // }\n    // function clearCanvas(){\n    //     current_state = one_state_back;\n    //     ctx.clearRect(0,0,500,500);\n    //     ctx.putImageData(current_state,0,0);\t\n    // }\n    // function Distance(start_point,end_point)\n    // {\n    //     var radius = Math.sqrt(Math.pow( start_point.X - end_point.X,2)+Math.pow( start_point.Y - end_point.Y ,2));\n    //     return radius;\n    // }\n    value: function render() {\n      return React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        className: classes.Canvas,\n        onMouseDown: this.MouseDown,\n        onMouseMove: this.MouseMove,\n        onMouseUp: this.MouseUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/rozenmoon/Desktop/drawing_react_app/src/UI/Canvas/Canvas.js"],"names":["React","Component","classes","Canvas","props","state","mousedown","startX","startY","endX","endY","one_state_back","current_state","MouseDown","e","persist","statei","ctx","getImageData","canvas","width","height","setState","nativeEvent","clientX","clientY","activationFunction","MouseMove","console","log","Task","clearCanvas","MouseUp","drawLine","clearRect","putImageData","beginPath","moveTo","lineTo","stroke","createRef","refs","getContext"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './Canvas.css'\n// import { NONAME } from 'dns';\n\nclass Canvas extends Component {\n    state= {\n        mousedown: false,\n        startX: 0,\n        startY: 0,\n        endX: 0,\n        endY: 0,\n        one_state_back: null,\n        current_state: null\n    }\n\n    canvas;\n    ctx;\n\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef();\n        \n    }\n\n    componentDidMount(){\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n        console.log(this.canvas.width,this.canvas.height);\n        const statei = this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height);\n        this.setState({one_state_back: statei, current_state: statei});\n        // this.ctx.beginPath();\n        // this.ctx.moveTo();\n        // this.ctx.lineTo(\"100px,100px\");\n        // this.ctx.stroke();\n    }\n\n\n    MouseDown = (e) => {\n        e.persist();\n        const statei = this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height);\n        this.setState(() => ({mousedown : true, startX: e.nativeEvent.clientX, startY: e.nativeEvent.clientY, one_state_back: statei}));\n        this.activationFunction(e);\n    }\n\n    MouseMove = (e) => {\n        console.log(this.props.Task);\n        e.persist();\n        if(this.state.mousedown)\n        {\n            if(this.props.Task == \"Line\" || this.props.Task == \"Circle\")\n            {\n                this.clearCanvas();\n            }\n            this.activationFunction(e);\n        }\n    }\n\n    MouseUp = (e) => {\n        e.persist();\n        this.setState(() => ({mousedown: false, endX: e.nativeEvent.clientX, endY: e.nativeEvent.clientY}));\n        this.activationFunction(e);\n    }\n\n    activationFunction = (e) => {\n        if(this.props.Task === \"Line\")\n        {\n            return(this.drawLine(e));\n        }\n        else if(this.props.Task === \"Pencil\")\n        {\n            return(console.log(\"Pencil\"));\n        }\n        else if(this.props.Task === \"Shape\")\n        {\n            return(console.log(\"Shape\"));\n        }\n        else if(this.props.Task === \"Erase\")\n        {\n            return(console.log(\"Erase\"));\n        }\n    }\n\n    clearCanvas = () => {\n        this.setState({current_state : this.state.one_state_back});\n        this.ctx.clearRect(0,0,500,500);\n        this.ctx.putImageData(this.state.current_state,0,0);\t\n    }\n\n    drawLine = (e) => {\n        e.persist();\n        this.setState({endX: e.nativeEvent.clientX, endY: e.nativeEvent.clientY});\n        console.log(this.state.startX,this.state.startY);\t\n        console.log(this.state.endX,this.state.endY);\t\t\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.state.startX,this.state.startY);\n        this.ctx.lineTo(this.state.endX,this.state.endY);\n        this.ctx.stroke();\n        this.setState({current_state : this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height)});\n    }\n\n    // function drawCircle(event,start_point,end_point)\n    // {\n    //     end_point.X = event.clientX;\n    //     end_point.Y = event.clientY;\n    //     ctx.beginPath();\n    //     ctx.arc(start_point.X,start_point.Y,Distance(start_point,end_point),0,2*Math.PI);\n    //     ctx.stroke();\n    //     current_state = ctx.getImageData(0,0,c.width,c.height);\n    // }\n\n    // function Eraser(event)\n    // {\t\n    //     ctx.clearRect(event.clientX,event.clientY,4,4);\n    // }\n\n    // function handLine(event,start_point,end_point)\n    // {\n    //     start_point.X = end_point.X;\n    //     start_point.Y = end_point.Y;\n    //     end_point.X = event.clientX;\n    //     end_point.Y = event.clientY;\n    //     ctx.beginPath();\n    //     ctx.moveTo(start_point.X,start_point.Y);\n    //     ctx.lineTo(end_point.X,end_point.Y);\n    //     ctx.stroke();\n    //     current_state = ctx.getImageData(0,0,c.width,c.height);\n    // }\n\n    // function clearCanvas(){\n    //     current_state = one_state_back;\n    //     ctx.clearRect(0,0,500,500);\n    //     ctx.putImageData(current_state,0,0);\t\n    // }\n\n    // function Distance(start_point,end_point)\n    // {\n    //     var radius = Math.sqrt(Math.pow( start_point.X - end_point.X,2)+Math.pow( start_point.Y - end_point.Y ,2));\n    //     return radius;\n    // }\n\n render(){\n\n    return(<canvas \n            ref = \"canvas\" \n            className= {classes.Canvas} \n            onMouseDown ={this.MouseDown} \n            onMouseMove= {this.MouseMove} \n            onMouseUp={this.MouseUp} ></canvas>);\n\n    }   \n\n}\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}